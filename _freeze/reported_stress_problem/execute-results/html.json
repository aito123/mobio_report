{
  "hash": "b4435a501738bb1a453679d216d597ff",
  "result": {
    "markdown": "---\ntitle: \"Reported stress problem\"\ndate: 02/11/2023\nauthor: Santiago Sotelo\ndf-print: paged\n---\n\n::: {.cell}\n\n:::\n\n\n## Problem\n\n-   Reported_stress variables are defaulting all observations to `-1`, `left_blank`, `NA`, etc.\n\n## Objectives\n\n1.  Describe the problem.\n\n2.  Explain the origin of the problem.\n\nFor the purpose of this report, we are going to use the data from BecharaReport API gathered in 2023-02-11. This data has 1'256'346 observations and 80 variables, and can be found in the following Dropbox path:\n\n`Mobio Interactive Dropbox/Research/RWD/Shared R Scripts/Input csv/BecharaReportFull-2023-02-11T01_34_20.csv`.\n\n## Obj 1: Describing the problem\n\nAfter applying the procedure to reduce the number of duplicates in the data, we have 71'135 observations in data.\n\n### About Reported stress\n\nReported stress variables (`reported_stress_pre` & `reported_stress_post`) capture the information from the stress slider in the snapshot interface:\n\n![Stress slidebar can go from 0 to 1](images/snapshot_menu.slidebar.png){width=\"462\"}\n\nThis information is present in all types of observation with the exception of `account_creation`.\n\nWhen this field of the snapshot interface is left blank or there's an error in capturing this information, the application fills this variable with default values as `-1`, `-1.0`, `left_blank`, `NA`.\n\nThis scenario should be the exception, but we will see in the data that is actually the norm.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](reported_stress_problem_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nIn this plot we have filtered out the observation type that are `account_creation`, then we grouped the observations by month and divide the normal values between 0 and 1 from the missing default values: `-1`, `-1.0`, `left_blank`, `NA`.\n\nAs we can see in the plot, historically we had more missing default values than normal values which is data we can work with.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](reported_stress_problem_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nAlthough, if we consider zero also as a possible value inserted when data is missing, we can see that since 2022 we have only recorded missing default values in the variable `reported_stress_pre`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](reported_stress_problem_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nAs in the previous case, reported_stress_post has historically been populated with missing default values.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](reported_stress_problem_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nAnd if we considered zero as a possible default value then since 2022 we had only recorded default values in this two variables.\n\n## Obj 2: Origin of the problem\n\nWhen checking the SQL Pad, we can see that the problem is also present in the database.\n\nFor example, if we query a tabular table to count the values of `reported_stress_pre` between 2022 and 2023 in the server **AU_DB_PROD** we could see the following using this SQL syntax:\n\n``` sqlpostgresql\nselect reported_stress, COUNT(*)\nfrom snapshots\nwhere\n(start BETWEEN '2022-01-01'AND '2023-02-12')\nGROUP BY reported_stress\n```\n\n| reported_stress | count |\n|-----------------|-------|\n| -1              | 536   |\n",
    "supporting": [
      "reported_stress_problem_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}